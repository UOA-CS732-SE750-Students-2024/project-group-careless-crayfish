name: CI

permissions:
  id-token: write
  contents: read

# triggers on push to any branch
on:
  pull_request:

jobs:
  build-test-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.1" # latest LTS at the time this is written.
      - name: build & lint
        working-directory: "./frontend"
        run: |
          npm ci
          npm run lint
      - name: test
        working-directory: "./frontend"
        run: |
          npm test

  build-test-backend:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.1" # latest LTS at the time this is written.
      - name: build & lint
        working-directory: "./backend"
        run: |
          npm ci
          npm run lint
      - name: test
        working-directory: "./backend"
        run: |
          npm test

      - name: Enable backend service and test

        working-directory: "./backend"
        run: |
          echo "MONGO_SERVER=$MONGO_SERVER" >> .env
          echo "MONGO_USERNAME=$MONGO_USERNAME" >> .env
          echo "MONGO_PASSWORD=$MONGO_PASSWORD" >> .env
          echo "API_KEY=$API_KEY" >> .env
          echo "API_URL=$API_URL" >> .env
          npm run start&
          npm install -g wait-on
          npx wait-on http://localhost:3000/api/api-docs --timeout 100000
          npm run test:e2e
        env:
          MONGO_SERVER: 127.0.0.1
          MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
          API_URL: https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=
  # Playwright end-to-end test
  chrome-e2e-test:
    needs: [build-test-backend, build-test-frontend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.1" # latest LTS at the time this is written.
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
      - name: build playwright
        working-directory: "./e2eTests"
        run: |
          npm ci
          
      - name: Set frontend envs
        working-directory: "./frontend"
        run: |
          rm .env
          echo "VITE_BACKEND_API_BASE_URL=$VITE_BACKEND_API_BASE_URL" >> .env
        env:
          # node creds
          VITE_BACKEND_API_BASE_URL: http://localhost:3000
      - name: Set node configs
        working-directory: "./backend"
        run: |
          rm .env
          echo "MONGO_SERVER=$MONGO_SERVER" >> .env
          echo "MONGO_USERNAME=$MONGO_USERNAME" >> .env
          echo "MONGO_PASSWORD=$MONGO_PASSWORD" >> .env
          echo "API_KEY=$API_KEY" >> .env
          echo "API_URL=$API_URL" >> .env

        env:
          # node creds
          MONGO_SERVER: mongo
          MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
          API_URL: https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=
      - name: Set docker-compose configs
        working-directory: "./"
        run: |
          rm .env
          echo "MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD" >> .env
          echo "MONGO_INITDB_DATABASE=$MONGO_INITDB_DATABASE" >> .env
          echo "ME_CONFIG_MONGODB_SERVER=$ME_CONFIG_MONGODB_SERVER" >> .env
          echo "ME_CONFIG_MONGODB_PORT=$ME_CONFIG_MONGODB_PORT" >> .env
          echo "ME_CONFIG_MONGODB_ENABLE_ADMIN=$ME_CONFIG_MONGODB_ENABLE_ADMIN" >> .env
          echo "ME_CONFIG_MONGODB_AUTH_DATABASE=$ME_CONFIG_MONGODB_AUTH_DATABASE" >> .env
          echo "ME_CONFIG_MONGODB_AUTH_USERNAME=$ME_CONFIG_MONGODB_AUTH_USERNAME" >> .env
          echo "ME_CONFIG_MONGODB_AUTH_PASSWORD=$ME_CONFIG_MONGODB_AUTH_PASSWORD" >> .env
          echo "ME_CONFIG_BASICAUTH_USERNAME=$ME_CONFIG_BASICAUTH_USERNAME" >> .env
          echo "ME_CONFIG_BASICAUTH_PASSWORD=$ME_CONFIG_BASICAUTH_PASSWORD" >> .env
        env:
          # mongo creds
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
          MONGO_INITDB_DATABASE: ${{ secrets.MONGO_INITDB_DATABASE }}
          # mongo express creds
          ME_CONFIG_MONGODB_SERVER: mongo
          ME_CONFIG_MONGODB_PORT: 27017
          ME_CONFIG_MONGODB_ENABLE_ADMIN: false
          ME_CONFIG_MONGODB_AUTH_DATABASE: admin
          ME_CONFIG_MONGODB_AUTH_USERNAME: ${{ secrets.ME_CONFIG_MONGODB_AUTH_USERNAME }}
          ME_CONFIG_MONGODB_AUTH_PASSWORD: ${{ secrets.ME_CONFIG_MONGODB_AUTH_PASSWORD }}
          ME_CONFIG_BASICAUTH_USERNAME: ${{ secrets.ME_CONFIG_BASICAUTH_USERNAME }}
          ME_CONFIG_BASICAUTH_PASSWORD: ${{ secrets.ME_CONFIG_BASICAUTH_PASSWORD }}
      - name: Start servers
        working-directory: "./scripts"
        run: |
          chmod +x start-ci.sh
          (./start-ci.sh)&
          npm install -g wait-on
          npx wait-on http://localhost:5000/ --timeout 120000
          npx wait-on http://localhost:3000/api/api-docs --timeout 120000
      - name: frontend build
        working-directory: "./frontend"
        run: |
          npm ci
          npm run build
      - name: Run Playwright E2E tests
        working-directory: "./e2eTests"
        run: |
          echo "REACT_APP_URL=$REACT_APP_URL" >> .env
          echo "BACKEND_API_URL=$BACKEND_API_URL" >> .env
          npm run test:e2e
        env:
          REACT_APP_URL: http://localhost:5000
          BACKEND_API_URL: http://localhost:3000/api